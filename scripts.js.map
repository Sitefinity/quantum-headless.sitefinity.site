{"version":3,"sources":["webpack:///node_modules/sitefinity-webservices-sdk/dist/sitefinity-webservices-sdk.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iCAAiC;AAClF,wHAAwH,mBAAmB,EAAE;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mGAAmG,kBAAkB,EAAE;AACvH,kGAAkG,iBAAiB,EAAE;AACrH,gGAAgG,eAAe,EAAE;AACjH,oGAAoG,mBAAmB,EAAE;AACzH,iGAAiG,gBAAgB,EAAE;AACnH,oGAAoG,mBAAmB,EAAE;AACzH,mGAAmG,kBAAkB,EAAE;AACvH,qGAAqG,oBAAoB,EAAE;AAC3H,sGAAsG,qBAAqB,EAAE;AAC7H,kGAAkG,iBAAiB,EAAE;AACrH,gGAAgG,eAAe,EAAE;AACjH,kGAAkG,iBAAiB,EAAE;AACrH,iGAAiG,gBAAgB,EAAE;AACnH,0GAA0G,yBAAyB,EAAE;AACrI,0GAA0G,yBAAyB,EAAE;AACrI,uGAAuG,sBAAsB,EAAE;AAC/H,8GAA8G,6BAA6B,EAAE;AAC7I,sGAAsG,qBAAqB,EAAE;AAC7H,yGAAyG,wBAAwB,EAAE;AACnI;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,gBAAgB,sCAAsC,iBAAiB,EAAE;AAC/E,qBAAqB,uDAAuD;;AAE5E;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA,mCAAmC,oCAAoC;AACvE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEA;AACA;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEA;AACA;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEA;AACA,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,UAAU,OAAO,+DAA+D,qBAAqB;AACrG,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yJAAyJ,qBAAqB;AAC9K;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,UAAU,OAAO,kEAAkE,WAAW;AAC9F,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO,yBAAyB,iBAAiB;AAC/D,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO,yBAAyB,gBAAgB;AAC9D,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB;AACxB,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+BAA+B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE,EAAE,EAAE,IAAI,EAAE;AAChD,kCAAkC,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,GAAG;AACjG,kCAAkC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,GAAG;AAC5F;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO,sDAAsD,eAAe;AACvF,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0CAA0C;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,aAAa;AAC7D,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO,yBAAyB,iBAAiB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO,yBAAyB,gBAAgB;AAC9D,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oDAAoD;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA,2BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAccAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO,wFAAwF;AAC5G,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB,iCAAiC;AACzE;AACA;AACA,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yBAAyB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,2IAA2I,gBAAgB;AAC3J;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP,UAAU;AACV,CAAC;AACD,sD","file":"scripts.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Sitefinity\"] = factory();\n\telse\n\t\troot[\"Sitefinity\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/tslib/tslib.es6.js\":\n/*!*****************************************!*\\\n  !*** ./node_modules/tslib/tslib.es6.js ***!\n  \\*****************************************/\n/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__extends\", function() { return __extends; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__rest\", function() { return __rest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__decorate\", function() { return __decorate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__param\", function() { return __param; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__metadata\", function() { return __metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__awaiter\", function() { return __awaiter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__generator\", function() { return __generator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__exportStar\", function() { return __exportStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__values\", function() { return __values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__read\", function() { return __read; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__spread\", function() { return __spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__await\", function() { return __await; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncGenerator\", function() { return __asyncGenerator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncDelegator\", function() { return __asyncDelegator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__asyncValues\", function() { return __asyncValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__makeTemplateObject\", function() { return __makeTemplateObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importStar\", function() { return __importStar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__importDefault\", function() { return __importDefault; });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n\n/***/ \"./src/Authentication.ts\":\n/*!*******************************!*\\\n  !*** ./src/Authentication.ts ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n* @class Authentication\r\n* @classdesc The constructor of the Authentication object. This object is used for authenticating a user to Sitefinity.\r\n* @param {object} options - An object containing configuration options for the {@Link Authentication} object.\r\n* @param {string} options.serviceUrl - Your service url that points to the configured instance of Sitefinity service.\r\n*/\r\nvar Authentication = /** @class */ (function () {\r\n    function Authentication(options) {\r\n        this._token = null;\r\n        this._serviceUrl = options.serviceUrl;\r\n        this.factory = options.factory;\r\n    }\r\n    /**\r\n    * Logins the user. A service call is made to login the user. If the call is successful and the service returns a token, this token is cached in the {@link Authentication} object.\r\n    * @memberOf Authentication\r\n    * @instance\r\n    * @param {string} username - The username.\r\n    * @param {string} password - The password.\r\n    * @param {Function} [success] - The success handler of the method.\r\n    * @param {Function} [failure] - The error handler of the method.\r\n    * @deprecated This method is deprecated and should not be used with versions of sitefinity >= 10.0\r\n    * @example\r\n    * sf.authentication.login(\"username\", \"password\", successCb, failureCb);\r\n    */\r\n    Authentication.prototype.login = function (username, password, success, failure) {\r\n        var that = this;\r\n        var request = this.factory.create({\r\n            data: {\r\n                username: username,\r\n                password: password\r\n            },\r\n            urlOptions: {\r\n                baseUrl: that._serviceUrl + 'login'\r\n            },\r\n            successCb: function (data) {\r\n                that.setToken(data.value);\r\n                if (typeof success === 'function')\r\n                    success(data.value);\r\n            },\r\n            failureCb: failure\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Logouts the user.\r\n    * @memberOf Authentication\r\n    * @instance\r\n    * @param {Function} [success] - The success handler of the method.\r\n    * @param {Function} [failure] - The error handler of the method.\r\n    * @deprecated This method is deprecated and should not be used with versions of sitefinity >= 10.0\r\n    */\r\n    Authentication.prototype.logout = function (success, failure) {\r\n        var that = this;\r\n        var request = this.factory.create({\r\n            urlOptions: {\r\n                baseUrl: that._serviceUrl + 'logout',\r\n                token: that.getToken()\r\n            },\r\n            successCb: function (data) {\r\n                that.setToken(null);\r\n                if (typeof success === 'function')\r\n                    success(data);\r\n            },\r\n            failureCb: failure\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Sets the authentication token.\r\n    * @memberOf Authentication\r\n    * @instance\r\n    * @param {string} token - The token, which will be used for authentication.\r\n    */\r\n    Authentication.prototype.setToken = function (token) {\r\n        this._token = token;\r\n    };\r\n    /**\r\n    * Gets the authentication token.\r\n    * @memberOf Authentication\r\n    * @instance\r\n    * @returns {string}\r\n    */\r\n    Authentication.prototype.getToken = function () {\r\n        return this._token;\r\n    };\r\n    return Authentication;\r\n}());\r\nexports.Authentication = Authentication;\r\n\n\n/***/ }),\n\n/***/ \"./src/BlobBuilder.ts\":\n/*!****************************!*\\\n  !*** ./src/BlobBuilder.ts ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @classdesc The BlobBuilder class is used to generate blob objects.\r\n * @class BlobBuilder\r\n */\r\nvar BlobBuilder = /** @class */ (function () {\r\n    function BlobBuilder() {\r\n        this._blob = new Blob();\r\n    }\r\n    /**\r\n    * Append new value to blob.\r\n    * @memberOf BlobBuilder\r\n    * @instance\r\n    * @param {object} value - The value to be appended.\r\n    */\r\n    BlobBuilder.prototype.append = function (value) {\r\n        this._blob = new Blob([this._blob, value]);\r\n    };\r\n    /**\r\n    * Get generated blob.\r\n    * @memberOf BlobBuilder\r\n    */\r\n    BlobBuilder.prototype.build = function () {\r\n        return this._blob;\r\n    };\r\n    return BlobBuilder;\r\n}());\r\nexports.BlobBuilder = BlobBuilder;\r\n\n\n/***/ }),\n\n/***/ \"./src/ContentTypes.ts\":\n/*!*****************************!*\\\n  !*** ./src/ContentTypes.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar contentTypes = {\r\n    json: \"application/json\"\r\n};\r\nexports.default = contentTypes;\r\n\n\n/***/ }),\n\n/***/ \"./src/Data.ts\":\n/*!*********************!*\\\n  !*** ./src/Data.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n* @class Data\r\n* @classdesc The constructor of the Data object. This object is used for requesting data from Sitefinity.\r\n* @param {object} urlOptions - An object containing configuration options for the {@link Data} object.\r\n* @param {string} urlOptions.baseUrl - Your service url that points to the configured instance of Sitefinity service.\r\n* @param {string} urlOptions.entitySet - The url name of the type.\r\n* @param {object} urlOptions.SFParams - An object containing configuration options for requests.\r\n* @param {string} urlOptions.SFParams.provider - The provider name to use in each request.\r\n* @param {string} urlOptions.SFParams.culture - The culture name to use in each request.\r\n*/\r\nvar Data = /** @class */ (function () {\r\n    function Data(urlOptions, factory) {\r\n        this.urlOptions = urlOptions;\r\n        this.factory = factory;\r\n    }\r\n    // TODO: rethink this\r\n    /**\r\n    * Executes a GET request to retrieve a collection of items.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.action - The OData action along with its parameters.\r\n    * @param {object} parameters.query - The {@link WhereQuery} with which to filter the items.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.get = function (parameters) {\r\n        parameters = parameters || {};\r\n        // TODO: move to Request\r\n        if (parameters.query)\r\n            this.urlOptions.ODataParams = parameters.query;\r\n        var request = this.factory.get({\r\n            urlOptions: this.urlOptions,\r\n            action: parameters.action,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb,\r\n            fallbackProperties: parameters.fallbackProperties\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a GET request to retrieve an/all item(s) operations.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.getOperations = function (parameters) {\r\n        var request;\r\n        var action = \"operations\";\r\n        // Set parentId if no item key is passed\r\n        if (!parameters.key)\r\n            action += \"?parentId=\" + parameters.parentId;\r\n        var params = {\r\n            urlOptions: this.urlOptions,\r\n            action: action,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        };\r\n        if (parameters.key) {\r\n            params.key = parameters.key;\r\n            request = this.factory.getSingle(params);\r\n        }\r\n        else {\r\n            request = this.factory.get(params);\r\n        }\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a GET request for a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {object} parameters.query - The {@link QueryBase} object containing the OData query options that should be sent to the server.\r\n    * @param {string} parameters.key - The identifier of the item to be retrieved.\r\n    * @param {string} parameters.action - The OData action along with its parameters.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.getSingle = function (parameters) {\r\n        if (!(parameters.key))\r\n            throw \"Parameter 'key' is required!\";\r\n        if (parameters.query)\r\n            this.urlOptions.ODataParams = parameters.query;\r\n        var request = this.factory.getSingle({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            action: parameters.action,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb,\r\n            fallbackProperties: parameters.fallbackProperties\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a POST request for a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    * @param {string} parameters.action - The OData action along with its parameters.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.create = function (parameters) {\r\n        if (!(parameters.data))\r\n            throw \"Parameter 'data' is required!\";\r\n        var request = this.factory.create({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            data: parameters.data,\r\n            action: parameters.action,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a PATCH request to update a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {bool} parameters.saveTemp - A flag indicating whether to save in temp.\r\n    * @param {string} parameters.key - The identifier of the item to be updated.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    * @param {string} parameters.action - The OData action along with its parameters.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    * @example\r\n    * var data = sf.data({\r\n    *     urlName: \"newsitems\",\r\n    *     providerName: \"OpenAccessDataProvider\",\r\n    *     cultureName: \"en\"\r\n    * });\r\n    *\r\n    * var newsItemUpdate =  {\r\n    *    \"Title\": 'updated news title'\r\n    * };\r\n    *\r\n    * data.update({\r\n    *   key: '00000000-0000-0000-0000-000000000000', // key of item to update\r\n    *   data: newsItemUpdate,\r\n    *   saveTemp: true,\r\n    *   successCb: successCb,\r\n    *   failureCb: failureCb\r\n    * });\r\n    */\r\n    Data.prototype.update = function (parameters) {\r\n        if (!(parameters.key || parameters.data))\r\n            throw \"Parameters: 'data' and 'key' are required!\";\r\n        var request = this.factory.update({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            data: parameters.data,\r\n            action: parameters.action,\r\n            saveTemp: parameters.saveTemp,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a DELETE request to delete a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item to be deleted.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.destroy = function (parameters) {\r\n        if (!(parameters.key))\r\n            throw \"Parameter 'key' is required!\";\r\n        var request = this.factory.destroy({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a POST request to execute a workflow operation for single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.operation = function (parameters) {\r\n        if (!(parameters.key || parameters.data))\r\n            throw \"Parameters: 'data' and 'key' are required!\";\r\n        var request = this.factory.create({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            action: \"operation\",\r\n            data: parameters.data,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a GET request to get the property of a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.property - The name of the property to be retrieved.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.getProperty = function (parameters) {\r\n        if (!(parameters.key || parameters.property))\r\n            throw \"Parameters: 'data' and 'property' are required!\";\r\n        var request = this.factory.getProperty({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.property,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a GET request to get the related property value of a single item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property to be retrieved.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.getRelated = function (parameters) {\r\n        if (!(parameters.key || parameters.navigationProperty))\r\n            throw \"Parameters: 'data' and 'navigationProperty' are required!\";\r\n        var request = this.factory.getRelated({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a GET request to retrieve the related property value of a single item by the id of the related item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property to be retrieved.\r\n    * @param {string} parameters.relatedKey - The identifier of the related item.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.getRelatedById = function (parameters) {\r\n        if (!(parameters.key || parameters.navigationProperty || parameters.relatedKey))\r\n            throw \"Parameters: 'data', 'relatedKey' and 'navigationProperty' are required!\";\r\n        var request = this.factory.getRelatedById({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            relatedKey: parameters.relatedKey,\r\n            navigationProperty: parameters.navigationProperty,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a DELETE request to retrieve the delete all of the associated members in the relation property.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.destroyRelated = function (parameters) {\r\n        if (!(parameters.key || parameters.navigationProperty))\r\n            throw \"Parameters: 'data' and 'navigationProperty' are required!\";\r\n        var request = this.factory.destroyRelated({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a DELETE request to retrieve the a single entry of the associated members in the relation property.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property.\r\n    * @param {string} parameters.relatedKey - The identifier of the related item.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.destroyRelatedById = function (parameters) {\r\n        if (!(parameters.key || parameters.navigationProperty || parameters.relatedKey))\r\n            throw \"Parameters: 'data', 'relatedKey' and 'navigationProperty' are required!\";\r\n        var request = this.factory.destroyRelatedById({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            relatedKey: parameters.relatedKey,\r\n            navigationProperty: parameters.navigationProperty,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a POST request to add a related item to the property collection.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property.\r\n    * @param {string} parameters.link - The URL of the related item.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    */\r\n    Data.prototype.createRelated = function (parameters) {\r\n        if (!(parameters.key || parameters.navigationProperty || parameters.link))\r\n            throw \"Parameters: 'data', 'link' and 'navigationProperty' are required!\";\r\n        var data = {\r\n            \"@odata.id\": parameters.link\r\n        };\r\n        var request = this.factory.createRelated({\r\n            urlOptions: this.urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty,\r\n            data: data,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        });\r\n        request._execute();\r\n    };\r\n    /**\r\n    * Executes a POST request to upload a media item.\r\n    * @memberOf Data\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.data - The data to be uploaded.\r\n    * @param {string} parameters.data.content - The base64 representation of the media item.\r\n    * @param {string} parameters.data.contentType - The content type of the item. E.g. image/jpeg.\r\n    * @param {string} parameters.data.name - The name of the media item.\r\n    * @param {string} parameters.data.payload - Holds the JSON metadata about the image. E.g. Title, Urlname etc.\r\n    * @param {string} parameters.data.uploadProperties - The properties passed on upload. Must contain ParentId and can contain FolderId, Title, UrlName, etc.\r\n    * @param {Function} parameters.successCb - The success callback function.\r\n    * @param {Function} parameters.failureCb - The error callback function.\r\n    * @example\r\n    *\r\n    * var data = sf.data({\r\n    *     urlName: \"images\"\r\n    * });\r\n    * data.upload({\r\n    *     data: {\r\n    *         content: \"base 64 representation of the file\",\r\n    *         contentType: \"image/jpeg\",\r\n    *         name: \"test.jpg\",\r\n    *         payload: {\r\n    *             Title: \"Test\",\r\n    *             UrlName: \"test\"\r\n    *         },\r\n    *         uploadProperties: {\r\n    *             ParentId: \"4BA7AD46-F29B-4E65-BE17-9BF7CE5BA1FB\"\r\n    *         }\r\n    *     },\r\n    *     successCb: successCb,\r\n    *     failureCb: failureCb\r\n    * });\r\n    */\r\n    Data.prototype.upload = function (parameters) {\r\n        if (!(parameters || parameters.data || parameters.data.content || parameters.data.contentType || parameters.data || parameters.data.name || parameters.data.uploadProperties))\r\n            throw \"parameters: content, contentType, name and uploadProperties are required!\";\r\n        var options = {\r\n            urlOptions: this.urlOptions,\r\n            _factory: this.factory,\r\n            successCb: parameters.successCb,\r\n            failureCb: parameters.failureCb\r\n        };\r\n        var batch = this.factory.batch(options);\r\n        var transaction = batch.beginTransaction();\r\n        var uploadedFile = transaction.upload({\r\n            entitySet: this.urlOptions.entitySet,\r\n            data: parameters.data.content,\r\n            contentType: parameters.data.contentType,\r\n            fileName: parameters.data.name,\r\n            uploadProperties: parameters.data.uploadProperties\r\n        });\r\n        if (parameters.data.payload)\r\n            transaction.update({\r\n                entitySet: this.urlOptions.entitySet,\r\n                key: uploadedFile,\r\n                data: parameters.data.payload\r\n            });\r\n        if (parameters.publish === true) {\r\n            transaction.operation({\r\n                entitySet: this.urlOptions.entitySet,\r\n                key: uploadedFile,\r\n                data: {\r\n                    action: \"Publish\"\r\n                }\r\n            });\r\n        }\r\n        batch.endTransaction(transaction);\r\n        var executor = this.factory.createExecutor(batch);\r\n        executor._execute();\r\n    };\r\n    return Data;\r\n}());\r\nexports.Data = Data;\r\n\n\n/***/ }),\n\n/***/ \"./src/Expression.ts\":\n/*!***************************!*\\\n  !*** ./src/Expression.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\r\nvar ExpressionBase = /** @class */ (function () {\r\n    function ExpressionBase(type) {\r\n        this.type = type;\r\n    }\r\n    ExpressionBase.prototype.getType = function () {\r\n        return this.type;\r\n    };\r\n    return ExpressionBase;\r\n}());\r\nexports.ExpressionBase = ExpressionBase;\r\nvar BinaryExpression = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BinaryExpression, _super);\r\n    function BinaryExpression(type, parameter, constant) {\r\n        var _this = _super.call(this, type) || this;\r\n        _this.parameter = parameter;\r\n        _this.constant = constant;\r\n        return _this;\r\n    }\r\n    BinaryExpression.prototype.getParameter = function () {\r\n        return this.parameter;\r\n    };\r\n    BinaryExpression.prototype.getConstant = function () {\r\n        return this.constant;\r\n    };\r\n    return BinaryExpression;\r\n}(ExpressionBase));\r\nexports.BinaryExpression = BinaryExpression;\r\nvar ComplexExpression = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ComplexExpression, _super);\r\n    function ComplexExpression(type, expressions) {\r\n        var _this = _super.call(this, type) || this;\r\n        _this.expressions = expressions;\r\n        return _this;\r\n    }\r\n    ComplexExpression.prototype.getExpressions = function () {\r\n        return this.expressions;\r\n    };\r\n    return ComplexExpression;\r\n}(ExpressionBase));\r\nexports.ComplexExpression = ComplexExpression;\r\n\n\n/***/ }),\n\n/***/ \"./src/Headers.ts\":\n/*!************************!*\\\n  !*** ./src/Headers.ts ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.headerNames = {\r\n    contentType: \"Content-Type\",\r\n    authorization: \"Authorization\",\r\n    contentEncoding: \"Content-Encoding\",\r\n    operation: \"X-Operation\",\r\n    properties: \"X-Sf-Properties\",\r\n    fileName: \"X-File-Name\",\r\n    serviceRequest: \"X-SF-Service-Request\",\r\n    choicesBinaryRepresentation: \"X-SF-Binary-Choice-Representation\"\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./src/HttpMethods.ts\":\n/*!****************************!*\\\n  !*** ./src/HttpMethods.ts ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar methods = {\r\n    Get: \"GET\",\r\n    Put: \"PUT\",\r\n    Post: \"POST\",\r\n    Patch: \"PATCH\",\r\n    Delete: \"DELETE\"\r\n};\r\nexports.default = methods;\r\n\n\n/***/ }),\n\n/***/ \"./src/OrderProperty.ts\":\n/*!******************************!*\\\n  !*** ./src/OrderProperty.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar OrderProperty = /** @class */ (function () {\r\n    function OrderProperty(propertyPath, isDesc) {\r\n        if (isDesc === void 0) { isDesc = null; }\r\n        this.propertyPath = propertyPath;\r\n        this.isDesc = isDesc;\r\n        if (!utils_1.utils.isString(propertyPath))\r\n            throw new Error('Property name is not a valid string');\r\n        propertyPath = propertyPath.trim();\r\n        var parts = propertyPath.split(' ');\r\n        // parts[0] is the propertyPath; [1] would be whether descending or not.\r\n        if (parts.length > 1 && isDesc !== true && isDesc !== false) {\r\n            isDesc = parts[1].toLowerCase() == 'desc';\r\n            if (!isDesc) {\r\n                // isDesc is false but check to make sure its intended.\r\n                var isAsc = parts[1].toLowerCase() == 'asc';\r\n                if (!isAsc) {\r\n                    throw new Error(\"the second word in the propertyPath must begin with 'desc' or 'asc'\");\r\n                }\r\n            }\r\n        }\r\n        this.propertyPath = parts[0];\r\n        this.isDesc = isDesc;\r\n    }\r\n    OrderProperty.prototype.getPropertyPath = function () {\r\n        return this.propertyPath;\r\n    };\r\n    OrderProperty.prototype.getDirection = function () {\r\n        return this.isDesc;\r\n    };\r\n    OrderProperty.prototype.getValue = function () {\r\n        var direction = (this.isDesc) ? 'desc' : 'asc';\r\n        return this.propertyPath + ' ' + direction;\r\n    };\r\n    return OrderProperty;\r\n}());\r\nexports.OrderProperty = OrderProperty;\r\n\n\n/***/ }),\n\n/***/ \"./src/Query.ts\":\n/*!**********************!*\\\n  !*** ./src/Query.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\r\nvar QueryBase_1 = __webpack_require__(/*! ./QueryBase */ \"./src/QueryBase.ts\");\r\nvar WhereQuery_1 = __webpack_require__(/*! ./WhereQuery */ \"./src/WhereQuery.ts\");\r\nvar OrderProperty_1 = __webpack_require__(/*! ./OrderProperty */ \"./src/OrderProperty.ts\");\r\nvar QueryBuilder_1 = __webpack_require__(/*! ./QueryBuilder */ \"./src/QueryBuilder.ts\");\r\n/**\r\n * @classdesc The query class is used for constructing queries.\r\n * @class Query\r\n * @augments QueryBase\r\n * @example\r\n * var query = new Sitefinity.Query();\r\n * var query0 = query.where().and().endsWith(\"Title\", \"Record\").done().or().startsWith('Title', 'asd').done().done();\r\n * var query1 = query.where().or().endsWith(\"Record\", \"Title\").ne('age', '15').eq('Content', 'test').done().done();\r\n * var query2 = query.where().and().endsWith(\"Title\", \"Record\").done().done();\r\n * var query3 = query.where().endsWith(\"Record\", \"Title\").or().ne('age', '15').eq('Content', 'test').done().done();\r\n * var query4 = query.where().not().endsWith(\"Record\", \"Title\").done().and().not().eq('Content', 'test').done().done().done();\r\n * var query5 = query.where().not().and().endsWith(\"Record\", \"Title\").eq('Content', 'test').done().done().done();\r\n * var query6 = query.select(\"Id\", \"Title\", \"Content\").expand('Tags').order(\"Title desc\").where().ne('Title', 'zzz').eq('Title', 'newTitle').done()//.count();\r\n * var query7 = query.order(\"Title desc\").where().eq('Title', 'newTitleUPDATE1').done().select(\"Title\", \"Content\");\r\n * var query8 = query.where().eq('Title', 'newTitleN11').done();\r\n */\r\nvar Query = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Query, _super);\r\n    function Query() {\r\n        var _this = _super.call(this) || this;\r\n        _this._order = null;\r\n        _this._skip = null;\r\n        _this._take = null;\r\n        _this._search = null;\r\n        _this._count = null;\r\n        _this.expr = null;\r\n        return _this;\r\n    }\r\n    /**\r\n    * Begins a where clause for filtering the items.\r\n    * @memberOf Query\r\n    * @returns {@link WhereQuery}\r\n    */\r\n    Query.prototype.where = function () {\r\n        var clone = this._clone(function (newObj) {\r\n            newObj.expr = new WhereQuery_1.WhereQuery(newObj);\r\n        });\r\n        return clone.expr;\r\n    };\r\n    /**\r\n    * Specifies the order by clause.\r\n    * @memberOf Query\r\n    * @example\r\n    * // filter by single field\r\n    * order(\"Title desc\")\r\n    * @example\r\n    * // filter by multiple fields\r\n    * order(\"Title desc\", \"Description asc\")\r\n    * @returns {@link Query}\r\n    */\r\n    Query.prototype.order = function () {\r\n        var orderPropPaths = this._extractArguments(arguments);\r\n        this._validatePropertyPaths(orderPropPaths);\r\n        return this._clone(function (newObj) {\r\n            var orderItems = [];\r\n            for (var i = 0; i < orderPropPaths.length; i++) {\r\n                var member = orderPropPaths[i];\r\n                var orderProp = new OrderProperty_1.OrderProperty(member);\r\n                orderItems.push(orderProp);\r\n            }\r\n            newObj._order = orderItems;\r\n        });\r\n    };\r\n    /** Skips a certain number of items from the beginning before returning the rest of the items. Used for paging.\r\n    * @memberOf Query.prototype\r\n    * @method skip\r\n    * @see [query.take]{@link query.take}\r\n    * @param {number} value The number of items to skip.\r\n    * @returns {Query}\r\n    */\r\n    Query.prototype.skip = function (value) {\r\n        // validate\r\n        return this._clone(function (newObj) {\r\n            newObj._skip = value;\r\n        });\r\n    };\r\n    /** Takes a specified number of items from the query result. Used for paging.\r\n    * @memberOf Query.prototype\r\n    * @param {number} value The number of items to take.\r\n    * @returns {Query}\r\n    */\r\n    Query.prototype.take = function (value) {\r\n        return this._clone(function (newObj) {\r\n            newObj._take = value;\r\n        });\r\n    };\r\n    /** Searches for the items matching the specified expression.\r\n    * @memberOf Query.prototype\r\n    * @param {string} value The search expression.\r\n    * @returns {Query}\r\n    */\r\n    Query.prototype.search = function (value) {\r\n        return this._clone(function (newObj) {\r\n            newObj._search = value;\r\n        });\r\n    };\r\n    /** Returns the total item count with the result. Used for paging.\r\n    * @memberOf Query.prototype\r\n    * @param {inline} inline Whether to return only the count of the items with or without their JSON representation.\r\n    * @returns {Query}\r\n    */\r\n    Query.prototype.count = function (inline) {\r\n        if (inline === void 0) { inline = true; }\r\n        return this._clone(function (newObj) {\r\n            newObj._count = inline;\r\n        });\r\n    };\r\n    Query.prototype._getFilter = function () {\r\n        return this.expr;\r\n    };\r\n    Query.prototype._getOrderBy = function () {\r\n        return this._order;\r\n    };\r\n    Query.prototype.build = function () {\r\n        return new QueryBuilder_1.QueryBuilder(this).build();\r\n    };\r\n    return Query;\r\n}(QueryBase_1.QueryBase));\r\nexports.Query = Query;\r\n\n\n/***/ }),\n\n/***/ \"./src/QueryBase.ts\":\n/*!**************************!*\\\n  !*** ./src/QueryBase.ts ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\n/**\r\n * @classdesc The base class for dealing with queries.\r\n * @class QueryBase\r\n */\r\nvar QueryBase = /** @class */ (function () {\r\n    function QueryBase() {\r\n        this._select = null;\r\n        this._expand = null;\r\n    }\r\n    /**\r\n    * Selects which fields will be returned when querying the service.\r\n    * @memberOf QueryBase\r\n    * @instance\r\n    * @param {string} arguments - an array of fields to include in the $select statement.\r\n    * @returns {QueryBase}\r\n    */\r\n    QueryBase.prototype.select = function () {\r\n        var selectPropPaths = this._extractArguments(arguments);\r\n        this._validatePropertyPaths(selectPropPaths);\r\n        return this._clone(function (newObj) {\r\n            newObj._select = selectPropPaths;\r\n        });\r\n    };\r\n    /**\r\n    * Selects which navigation properties will be returned when querying the service.\r\n    * @memberOf QueryBase\r\n    * @instance\r\n    * @param {string} arguments - an array of fields to include in the $expand statement.\r\n    * @returns {QueryBase}\r\n    */\r\n    QueryBase.prototype.expand = function () {\r\n        var propPaths = this._extractArguments(arguments);\r\n        this._validatePropertyPaths(propPaths);\r\n        return this._clone(function (newObj) {\r\n            newObj._expand = propPaths;\r\n        });\r\n    };\r\n    QueryBase.prototype._extractArguments = function (arg) {\r\n        var values = [];\r\n        for (var index = 0; index < arg.length; index++) {\r\n            values.push(arg[index]);\r\n        }\r\n        return values;\r\n    };\r\n    QueryBase.prototype._getSelect = function () {\r\n        return this._select;\r\n    };\r\n    QueryBase.prototype._getExpand = function () {\r\n        return this._expand;\r\n    };\r\n    QueryBase.prototype._validatePropertyPaths = function (propPaths, allowNested) {\r\n        if (allowNested === void 0) { allowNested = false; }\r\n        for (var i = 0; i < propPaths.length; i++) {\r\n            var member = propPaths[i];\r\n            if (!utils_1.utils.isString(member)) {\r\n                throw new Error('Invalid argument in clause');\r\n            }\r\n            if (!allowNested && member.indexOf('.') > -1) {\r\n                throw new Error('Invalid argument in clause');\r\n            }\r\n        }\r\n    };\r\n    QueryBase.prototype._clone = function (setter) {\r\n        if (setter === void 0) { setter = null; }\r\n        var newObj = utils_1.utils.clone(this, new QueryBase(), setter);\r\n        return newObj;\r\n    };\r\n    return QueryBase;\r\n}());\r\nexports.QueryBase = QueryBase;\r\n\n\n/***/ }),\n\n/***/ \"./src/QueryBuilder.ts\":\n/*!*****************************!*\\\n  !*** ./src/QueryBuilder.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar WhereQuery_1 = __webpack_require__(/*! ./WhereQuery */ \"./src/WhereQuery.ts\");\r\nvar Expression_1 = __webpack_require__(/*! ./Expression */ \"./src/Expression.ts\");\r\nvar OrderProperty_1 = __webpack_require__(/*! ./OrderProperty */ \"./src/OrderProperty.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar constants = __webpack_require__(/*! ./constants */ \"./src/constants.ts\").default;\r\nvar QueryBuilder = /** @class */ (function () {\r\n    function QueryBuilder(query) {\r\n        this.query = query;\r\n    }\r\n    QueryBuilder.prototype.build = function () {\r\n        var queryParameters = {};\r\n        this._buildODataQueryParams(this.query, queryParameters);\r\n        return queryParameters;\r\n    };\r\n    QueryBuilder.prototype._buildODataQueryParams = function (query, queryParameters) {\r\n        var queryParams = constants.ODataParams;\r\n        var whereClause = query._getFilter();\r\n        if (whereClause instanceof WhereQuery_1.WhereQuery) {\r\n            var expression = whereClause._getExpression();\r\n            if (expression instanceof Expression_1.ComplexExpression) {\r\n                var result = this._buildComplexExpression(expression, null);\r\n                if (result) {\r\n                    queryParameters[queryParams.$filter] = result;\r\n                }\r\n            }\r\n        }\r\n        var selectClause = query._getSelect();\r\n        if (selectClause instanceof Array) {\r\n            queryParameters[queryParams.$select] = selectClause.join(', ');\r\n        }\r\n        var expandClause = query._getExpand();\r\n        if (expandClause instanceof Array)\r\n            queryParameters[queryParams.$expand] = expandClause.join(', ');\r\n        var orderByClause = query._order;\r\n        if (orderByClause instanceof Array) {\r\n            var order = [];\r\n            for (var i in orderByClause) {\r\n                if (orderByClause[i] instanceof OrderProperty_1.OrderProperty)\r\n                    order.push(orderByClause[i].getValue());\r\n            }\r\n            queryParameters[queryParams.$orderby] = order.join(', ');\r\n        }\r\n        var take = query._take;\r\n        if (utils_1.utils.isNumber(take))\r\n            queryParameters[queryParams.$top] = take;\r\n        var skip = query._skip;\r\n        if (utils_1.utils.isNumber(skip))\r\n            queryParameters[queryParams.$skip] = skip;\r\n        var search = query._search;\r\n        if (search)\r\n            queryParameters[queryParams.$search] = search;\r\n        var count = query._count;\r\n        // means that the count is required inline\r\n        if (count !== null) {\r\n            queryParameters[queryParams.$count] = count;\r\n        }\r\n        return queryParameters;\r\n    };\r\n    QueryBuilder.prototype._buildComplexExpression = function (expression, parent) {\r\n        if (!(expression instanceof Expression_1.ComplexExpression))\r\n            throw new Error('Invalid complex expression');\r\n        var OperatorType = constants.ExpressionType;\r\n        var counter = 0;\r\n        var result = '';\r\n        var subExpressions = expression.getExpressions();\r\n        if (!subExpressions.length) {\r\n            return result;\r\n        }\r\n        while (true) {\r\n            var currentExp = subExpressions[counter];\r\n            if (currentExp instanceof Expression_1.BinaryExpression) {\r\n                result += this._buildBinaryExpression(currentExp);\r\n            }\r\n            else if (currentExp instanceof Expression_1.ComplexExpression) {\r\n                var complexResult = this._buildComplexExpression(currentExp, expression.type);\r\n                if (complexResult) {\r\n                    result += '(' + complexResult + ')';\r\n                }\r\n            }\r\n            if (expression.getType() === OperatorType.not)\r\n                result = expression.getType() + ' ' + result;\r\n            // TODOSDK: Rethink this!\r\n            if (expression.getType() === OperatorType.any) {\r\n                var exprVal = [];\r\n                for (var index = 0; index < subExpressions.length; index++) {\r\n                    if (subExpressions[index].type == OperatorType.contains || subExpressions[index].type == OperatorType.startsWith || subExpressions[index].type == OperatorType.endsWith)\r\n                        exprVal.push(subExpressions[index].type.toLowerCase() + \"(x, '\" + subExpressions[index].constant + \"')\");\r\n                    else\r\n                        exprVal.push('x ' + subExpressions[index].type.toLowerCase() + ' ' + this._checkType(subExpressions[index].constant));\r\n                }\r\n                result = currentExp.parameter + '/' + expression.getType() + '(x:' + exprVal.join(' ' + parent + ' ') + ')';\r\n            }\r\n            counter++;\r\n            if (counter == subExpressions.length)\r\n                break;\r\n            result += ' ' + expression.getType() + ' ';\r\n        }\r\n        return result;\r\n    };\r\n    QueryBuilder.prototype._buildBinaryExpression = function (expression) {\r\n        if (!(expression instanceof Expression_1.BinaryExpression))\r\n            throw new Error('Invalid binary expression');\r\n        var ExpressionType = constants.ExpressionType;\r\n        var result = null;\r\n        var type = expression.getType();\r\n        switch (type) {\r\n            case ExpressionType.eq:\r\n            case ExpressionType.ne:\r\n            case ExpressionType.lt:\r\n            case ExpressionType.le:\r\n            case ExpressionType.gt:\r\n            case ExpressionType.ge:\r\n                var constant = expression.getConstant();\r\n                /*var template = '({0} {1} \\'{2}\\')';\r\n                if (/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(constant))\r\n                    template = '({0} {1} {2})';*/\r\n                result = \"(\" + expression.getParameter() + \" \" + type + \" \" + this._checkType(constant) + \")\";\r\n                break;\r\n            // TODO contains is substringOf in Odata ?\r\n            case ExpressionType.contains:\r\n            case ExpressionType.startsWith:\r\n            case ExpressionType.endsWith:\r\n                result = type.toLowerCase() + \"(\" + expression.getParameter() + \", \" + this._checkType(expression.getConstant()) + \")\";\r\n                break;\r\n            default:\r\n                var msg = \"Unsupported operator \" + type;\r\n                throw new Error(msg);\r\n        }\r\n        return result;\r\n    };\r\n    QueryBuilder.prototype._checkType = function (constant) {\r\n        if (this._isGuid(constant))\r\n            return constant;\r\n        if (constant == null)\r\n            return null;\r\n        constant = constant.replace(/[+/?%#&]/g, function ($0) {\r\n            return encodeURIComponent($0);\r\n        });\r\n        // escapes the apostrophes\r\n        constant = constant.replace(/'/g, \"''\");\r\n        return \"'\" + constant + \"'\";\r\n    };\r\n    QueryBuilder.prototype._isGuid = function (constant) {\r\n        return /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(constant);\r\n    };\r\n    return QueryBuilder;\r\n}());\r\nexports.QueryBuilder = QueryBuilder;\r\n\n\n/***/ }),\n\n/***/ \"./src/Requests/BatchRequest.ts\":\n/*!**************************************!*\\\n  !*** ./src/Requests/BatchRequest.ts ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\r\nvar Request_1 = __webpack_require__(/*! ./Request */ \"./src/Requests/Request.ts\");\r\nvar BlobBuilder_1 = __webpack_require__(/*! ../BlobBuilder */ \"./src/BlobBuilder.ts\");\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./src/utils.ts\");\r\nvar headerNames = __webpack_require__(/*! ../Headers */ \"./src/Headers.ts\").headerNames;\r\nvar httpMethods = __webpack_require__(/*! ../HttpMethods */ \"./src/HttpMethods.ts\").default;\r\n/**\r\n * @classdesc The transaction class is used to group operations that involve data manipulation together and execute them as a single atomic operation.\r\n * @class Transaction\r\n * @param {object} urlOptions - The url options that are passed to the {@link _factory} object.\r\n * @param {object} _factory - The factory object used for request generation.\r\n */\r\nvar Transaction = /** @class */ (function () {\r\n    function Transaction(urlOptions, _factory) {\r\n        this.urlOptions = urlOptions;\r\n        this._factory = _factory;\r\n        this._requests = [];\r\n        this._counter = 0;\r\n    }\r\n    Transaction.prototype.upload = function (parameters) {\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            data: parameters.data,\r\n            contentType: parameters.contentType,\r\n            fileName: parameters.fileName,\r\n            key: parameters.key,\r\n            uploadProperties: JSON.stringify(parameters.uploadProperties)\r\n        };\r\n        var request = this._factory.upload(options);\r\n        return this.addRequest(this, request);\r\n    };\r\n    /**\r\n    * Adds a POST request to create a single item.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    */\r\n    Transaction.prototype.create = function (parameters) {\r\n        if (!(parameters || parameters.entitySet))\r\n            throw \"entitySet is required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            key: parameters.key,\r\n            action: parameters.action,\r\n            urlOptions: urlOptions,\r\n            data: JSON.stringify(parameters.data)\r\n        };\r\n        var request = this._factory.create(options);\r\n        return this.addRequest(this, request);\r\n    };\r\n    /**\r\n    * Adds a POST request to execute an operation on single item.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item to be updated.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    */\r\n    Transaction.prototype.operation = function (parameters) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.data))\r\n            throw \"parameters: entitySet, key and data are required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            action: 'operation',\r\n            data: JSON.stringify(parameters.data)\r\n        };\r\n        var request = this._factory.create(options);\r\n        this._overrideUrlGeneration(request, parameters.key, 'operation', options.urlOptions);\r\n        this.addRequest(this, request);\r\n    };\r\n    /**\r\n    * Adds a PATCH request to update a single item.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {bool} parameters.saveTemp - A flag indicating whether to save in temp.\r\n    * @param {string} parameters.key - The identifier of the item to be updated.\r\n    * @param {object} parameters.data - The payload of the request.\r\n    */\r\n    Transaction.prototype.update = function (parameters) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.data))\r\n            throw \"parameters: entitySet, key and data are required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            saveTemp: parameters.saveTemp,\r\n            key: parameters.key,\r\n            data: JSON.stringify(parameters.data)\r\n        };\r\n        var request = this._factory.update(options);\r\n        this._overrideUrlGeneration(request, parameters.key, undefined, options.urlOptions);\r\n        this.addRequest(this, request);\r\n    };\r\n    /**\r\n    * Adds a DELETE request to delete a single item.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item to be deleted.\r\n    */\r\n    Transaction.prototype.destroy = function (parameters) {\r\n        if (!(parameters || parameters.entitySet || parameters.key))\r\n            throw \"parameters: entitySet and key are required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key\r\n        };\r\n        var request = this._factory.destroy(options);\r\n        this._overrideUrlGeneration(request, parameters.key, undefined, options.urlOptions);\r\n        this.addRequest(this, request);\r\n    };\r\n    /**\r\n    * Adds a DELETE request to retrieve the delete all of the associated members in the relation property.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property.\r\n    */\r\n    Transaction.prototype.destroyRelated = function (parameters) {\r\n        if (!(parameters || parameters.entitySet || parameters.key))\r\n            throw \"parameters: entitySet and key are required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty\r\n        };\r\n        var request = this._factory.destroyRelated(options);\r\n        var navigationPropertyURL = request.navigationProperty + '/$ref';\r\n        this._overrideUrlGeneration(request, parameters.key, navigationPropertyURL, options.urlOptions);\r\n        this.addRequest(this, request);\r\n    };\r\n    /**\r\n    * Adds a DELETE request to retrieve the a single entry of the associated members in the relation property.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property.\r\n    * @param {string} parameters.relatedKey - The identifier of the related item.\r\n    */\r\n    Transaction.prototype.destroyRelatedById = function (parameters) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.relatedKey || parameters.navigationProperty))\r\n            throw \"parameters: entitySet, key, relatedKey and navigationProperty are required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            relatedKey: parameters.relatedKey,\r\n            navigationProperty: parameters.navigationProperty\r\n        };\r\n        var request = this._factory.destroyRelatedById(options);\r\n        this.addRequest(this, request);\r\n    };\r\n    /**\r\n    * Adds a POST request to add a related item to the property collection.\r\n    * @memberOf Transaction\r\n    * @instance\r\n    * @see {@link Data.createRelated}\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property\r\n    */\r\n    Transaction.prototype.createRelated = function (parameters) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.link || parameters.navigationProperty))\r\n            throw \"parameters: entitySet, key, link and navigationProperty are required!\";\r\n        // TODO: rethink about the urls\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        for (var index = 0; index < this._requests.length; index += 1) {\r\n            if (this._requests[index].id == parameters.link) {\r\n                parameters.link = \"$\" + this._requests[index].id;\r\n            }\r\n        }\r\n        var data = {\r\n            '@odata.id': parameters.link\r\n        };\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty,\r\n            data: JSON.stringify(data)\r\n        };\r\n        var request = this._factory.createRelated(options);\r\n        var navigationPropertyURL = request.navigationProperty + '/$ref';\r\n        this._overrideUrlGeneration(request, parameters.key, navigationPropertyURL, options.urlOptions);\r\n        return this.addRequest(this, request);\r\n    };\r\n    Transaction.prototype._overrideUrlGeneration = function (request, key, additionalPropertyURL, sfParams) {\r\n        // TODO: match requests with Content-ID's!\r\n        // Content-ID's are the same as id's in _requests.\r\n        for (var index = 0; index < this._requests.length; index += 1) {\r\n            if (this._requests[index].id == key) {\r\n                request._buildUrl = function () {\r\n                    var uri = \"$\" + key;\r\n                    if (additionalPropertyURL !== undefined) {\r\n                        uri = uri + '/' + additionalPropertyURL;\r\n                    }\r\n                    if (sfParams) {\r\n                        var queryString = request._getQueryString(sfParams);\r\n                        if (queryString) {\r\n                            uri = uri + queryString;\r\n                        }\r\n                    }\r\n                    return uri;\r\n                };\r\n            }\r\n        }\r\n    };\r\n    Transaction.prototype.addRequest = function (that, request) {\r\n        that._requests.push({ \"id\": that._counter, \"request\": request });\r\n        return that._counter++;\r\n    };\r\n    Transaction.prototype.urlParametersClone = function (entitySet) {\r\n        var options = utils_1.utils.clone(this.urlOptions);\r\n        options.entitySet = entitySet;\r\n        return options;\r\n    };\r\n    return Transaction;\r\n}());\r\n/**\r\n * @classdesc The batch request class is used for grouping requests into a single batch request to execute on the server.\r\n * @class BatchRequest\r\n */\r\nvar BatchRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BatchRequest, _super);\r\n    function BatchRequest(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this._factory = options._factory;\r\n        _this._requests = [];\r\n        _this._counter = 0;\r\n        _this.boundary = _this._createBoundary(\"sf_batch_\");\r\n        _this.responseHeaderRegex = /^([^()<>@,;:\\\\\"\\/[\\]?={} \\t]+)\\s?:\\s?(.*)/;\r\n        _this.responseStatusRegex = /^HTTP\\/1\\.\\d (\\d{3}) (.*)$/i;\r\n        return _this;\r\n    }\r\n    /**\r\n    * Adds a GET request to retrieve a collection of items.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {object} parameters.query - The {@link WhereQuery} with which to filter the items\r\n    */\r\n    BatchRequest.prototype.get = function (parameters) {\r\n        if (!(parameters || parameters.entitySet))\r\n            throw \"entitySet is required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        if (parameters && parameters.query)\r\n            urlOptions.ODataParams = parameters.query;\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            fallbackProperties: parameters.fallbackPropertyNames\r\n        };\r\n        var request = this._factory.get(options);\r\n        this.addRequest(request);\r\n    };\r\n    /**\r\n    * Adds a GET request for the retrieval of a single item.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {object} parameters.query - The {@link QueryBase} object containing the OData query options that should be sent to the server.\r\n    * @param {string} parameters.key - The identifier of the item to be retrieved.\r\n    */\r\n    BatchRequest.prototype.getSingle = function (parameters) {\r\n        if (!(parameters || parameters.entitySet || parameters.key))\r\n            throw \"parameters: entitySet and key are required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key\r\n        };\r\n        if (parameters.query)\r\n            options.ODataParams = parameters.query;\r\n        var request = this._factory.getSingle(options);\r\n        this.addRequest(request);\r\n    };\r\n    /**\r\n    * Adds a GET request to get the property of a single item.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.property - The name of the property to be retrieved.\r\n    */\r\n    BatchRequest.prototype.getProperty = function (parameters) {\r\n        if (!(parameters || parameters.entitySet || parameters.key, parameters.property))\r\n            throw \"parameters: entitySet, key and property are required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.property\r\n        };\r\n        var request = this._factory.getProperty(options);\r\n        this.addRequest(request);\r\n    };\r\n    /**\r\n    * Adds a GET request to get the related property value of a single item.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property to be retrieved.\r\n    */\r\n    BatchRequest.prototype.getRelated = function (parameters) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.navigationProperty))\r\n            throw \"parameters: entitySet, key and navigationProperty are required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            navigationProperty: parameters.navigationProperty\r\n        };\r\n        var request = this._factory.getRelated(options);\r\n        this.addRequest(request);\r\n    };\r\n    /**\r\n    * Adds a GET request to retrieve the related property value of a single item by the id of the related item.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @param {object} parameters - The parameters for the request.\r\n    * @param {string} parameters.key - The identifier of the item.\r\n    * @param {string} parameters.navigationProperty - The name of the navigation property to be retrieved.\r\n    * @param {string} parameters.relatedKey - The identifier of the related item.\r\n    */\r\n    BatchRequest.prototype.getRelatedById = function (parameters) {\r\n        if (!(parameters || parameters.entitySet || parameters.key || parameters.relatedKey || parameters.navigationProperty))\r\n            throw \"parameters: entitySet, key, relatedKey and navigationProperty are required!\";\r\n        var urlOptions = this.urlParametersClone(parameters.entitySet);\r\n        var options = {\r\n            urlOptions: urlOptions,\r\n            key: parameters.key,\r\n            relatedKey: parameters.relatedKey,\r\n            navigationProperty: parameters.navigationProperty\r\n        };\r\n        var request = this._factory.getRelatedById(options);\r\n        this.addRequest(request);\r\n    };\r\n    /**\r\n    * Begins a transaction.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    * @returns {@link Transaction}\r\n    */\r\n    BatchRequest.prototype.beginTransaction = function () {\r\n        var option = utils_1.utils.clone(this.urlOptions);\r\n        var newTransaction = new Transaction(option, this._factory);\r\n        newTransaction.id = ++this._counter;\r\n        return newTransaction;\r\n    };\r\n    /**\r\n    * Ends a transaction.\r\n    * @memberOf BatchRequest\r\n    * @instance\r\n    */\r\n    BatchRequest.prototype.endTransaction = function (transaction) {\r\n        this._requests.push({\r\n            id: transaction.id,\r\n            request: transaction\r\n        });\r\n    };\r\n    BatchRequest.prototype._getBody = function () {\r\n        return this._buildRequestBody();\r\n    };\r\n    BatchRequest.prototype._getMethod = function () {\r\n        return httpMethods.Post;\r\n    };\r\n    BatchRequest.prototype._getHeaders = function () {\r\n        var contentType = \"multipart/mixed; boundary=\" + this.boundary;\r\n        var headers = {};\r\n        headers[headerNames.contentType] = contentType;\r\n        return headers;\r\n    };\r\n    BatchRequest.prototype._buildUrl = function () {\r\n        var url = this.urlOptions.baseUrl + \"$batch\";\r\n        var queryString = this._getQueryString(this.urlOptions);\r\n        if (queryString) {\r\n            url += queryString;\r\n        }\r\n        return url;\r\n    };\r\n    BatchRequest.prototype._parseResponse = function (http) {\r\n        var context = {\r\n            position: 0,\r\n            boundaries: []\r\n        };\r\n        var pos = context.position;\r\n        var partHeaders = this._readHeaders(http.getAllResponseHeaders(), context);\r\n        var partContentType = this._contentType(partHeaders[\"content-type\"]);\r\n        if (partContentType && partContentType.mediaType == \"multipart/mixed\") {\r\n            context.boundaries.push(partContentType.properties.boundary);\r\n        }\r\n        context.position = pos;\r\n        var batchResponse = this._parseBatchResponse(http.responseText, context);\r\n        var responseParsed = [];\r\n        for (var i = 0; i < batchResponse.length; i++) {\r\n            try {\r\n                var finalResult = null;\r\n                var singleResponse = batchResponse[i];\r\n                var changesets = singleResponse.__changeResponses;\r\n                if (changesets) {\r\n                    finalResult = [];\r\n                    for (var j = 0; j < changesets.length; j++) {\r\n                        var changeset = changesets[j];\r\n                        var response = changeset.response;\r\n                        var responseResult = this._getResponseResult(response);\r\n                        finalResult.push(responseResult);\r\n                    }\r\n                }\r\n                else {\r\n                    var response = singleResponse.response;\r\n                    finalResult = this._getResponseResult(response);\r\n                }\r\n                var statusCodeCheck = function (r) {\r\n                    return r.statusCode >= 400;\r\n                };\r\n                var isSuccessful = Array.isArray(finalResult) ?\r\n                    finalResult.filter(statusCodeCheck).length === 0 :\r\n                    !statusCodeCheck(finalResult);\r\n                responseParsed.push({ isSuccessful: isSuccessful, response: finalResult });\r\n            }\r\n            catch (e) {\r\n                // TODO: why continue ?\r\n                continue;\r\n            }\r\n        }\r\n        var isSuccessfulCheck = function (r) {\r\n            return !r.isSuccessful;\r\n        };\r\n        var batchIsSuccessful = responseParsed.filter(isSuccessfulCheck).length === 0;\r\n        return { data: responseParsed, isSuccessful: batchIsSuccessful };\r\n    };\r\n    BatchRequest.prototype._parseBatchResponse = function (text, context) {\r\n        // get boundary from response\r\n        var delimiter = \"--\" + this._currentBoundary(context);\r\n        this._readTo(text, delimiter, context);\r\n        this._readLine(text, context);\r\n        var responses = [];\r\n        var partEnd;\r\n        while (partEnd !== \"--\" && context.position < text.length) {\r\n            var partHeaders = this._readHeaders(text, context);\r\n            var partContentType = this._contentType(partHeaders[\"content-type\"]);\r\n            var changeResponses;\r\n            if (partContentType && partContentType.mediaType === \"multipart/mixed\") {\r\n                context.boundaries.push(partContentType.properties.boundary);\r\n                try {\r\n                    changeResponses = this._parseBatchResponse(text, context);\r\n                }\r\n                catch (e) {\r\n                    e.response = this._readResponse(text, context, delimiter);\r\n                    changeResponses = [e];\r\n                }\r\n                responses.push({ __changeResponses: changeResponses });\r\n                context.boundaries.pop();\r\n                this._readTo(text, \"--\" + this._currentBoundary(context), context);\r\n            }\r\n            else {\r\n                if (!partContentType || partContentType.mediaType !== \"application/http\") {\r\n                    throw { message: \"invalid MIME part type \" };\r\n                }\r\n                // Skip empty line\r\n                this._readLine(text, context);\r\n                // Read the response\r\n                var response = this._readResponse(text, context, delimiter);\r\n                try {\r\n                    if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                        response = { message: response.statusCode + \" Http request is OK\", response: response };\r\n                    }\r\n                    else {\r\n                        // Keep track of failed responses and continue processing the batch.\r\n                        response = { message: \"HTTP request failed\", response: response };\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    response = e;\r\n                }\r\n                responses.push(response);\r\n            }\r\n            partEnd = text.substr(context.position, 2);\r\n            // Ignore the incoming line.\r\n            this._readLine(text, context);\r\n        }\r\n        return responses;\r\n    };\r\n    BatchRequest.prototype._getResponseResult = function (response) {\r\n        var responseBody = response.body;\r\n        var data = utils_1.utils.parseStringToJson(responseBody);\r\n        return {\r\n            data: data,\r\n            statusCode: response.statusCode,\r\n            headers: response.headers\r\n        };\r\n    };\r\n    BatchRequest.prototype._currentBoundary = function (context) {\r\n        var boundaries = context.boundaries;\r\n        return boundaries[boundaries.length - 1];\r\n    };\r\n    BatchRequest.prototype._contentType = function (str) {\r\n        if (!str) {\r\n            return null;\r\n        }\r\n        var contentTypeParts = str.split(\";\");\r\n        var properties = {};\r\n        var i, len;\r\n        for (i = 1, len = contentTypeParts.length; i < len; i++) {\r\n            var contentTypeParams = contentTypeParts[i].split(\"=\");\r\n            properties[contentTypeParams[0].replace(/^\\s+|\\s+$/g, '')] = contentTypeParams[1];\r\n        }\r\n        return { mediaType: contentTypeParts[0].replace(/^\\s+|\\s+$/g, ''), properties: properties };\r\n    };\r\n    BatchRequest.prototype._readTo = function (text, str, context) {\r\n        var start = context.position || 0;\r\n        var end = text.length;\r\n        if (str) {\r\n            end = text.indexOf(str, start);\r\n            if (end === -1) {\r\n                return null;\r\n            }\r\n            context.position = end + str.length;\r\n        }\r\n        else {\r\n            context.position = end;\r\n        }\r\n        return text.substring(start, end);\r\n    };\r\n    BatchRequest.prototype._readLine = function (text, context) {\r\n        return this._readTo(text, BatchRequest.constants.newLine, context);\r\n    };\r\n    BatchRequest.prototype._readHeaders = function (text, context) {\r\n        var headers = {};\r\n        var parts;\r\n        var line;\r\n        var pos;\r\n        do {\r\n            pos = context.position;\r\n            line = this._readLine(text, context);\r\n            parts = this.responseHeaderRegex.exec(line);\r\n            if (parts !== null) {\r\n                headers[parts[1].toLowerCase()] = parts[2];\r\n            }\r\n            else {\r\n                // Whatever was found is not a header, so reset the context position.\r\n                context.position = pos;\r\n            }\r\n        } while (line && parts);\r\n        return headers;\r\n    };\r\n    BatchRequest.prototype._readResponse = function (text, context, delimiter) {\r\n        // Read the status line.\r\n        var pos = context.position;\r\n        var match = this.responseStatusRegex.exec(this._readLine(text, context));\r\n        var statusCode;\r\n        var statusText;\r\n        var headers;\r\n        if (match) {\r\n            statusCode = match[1];\r\n            statusText = match[2];\r\n            headers = this._readHeaders(text, context);\r\n            this._readLine(text, context);\r\n        }\r\n        else {\r\n            context.position = pos;\r\n        }\r\n        return {\r\n            statusCode: statusCode,\r\n            statusText: statusText,\r\n            headers: headers,\r\n            body: this._readTo(text, \"\\r\\n\" + delimiter, context)\r\n        };\r\n    };\r\n    BatchRequest.prototype._buildRequestBody = function () {\r\n        var builder = new BlobBuilder_1.BlobBuilder();\r\n        builder.append('');\r\n        for (var index = 0; index < this._requests.length; index += 1) {\r\n            var request = this._requests[index].request;\r\n            if (index != 0)\r\n                builder.append(BatchRequest.constants.newLine + BatchRequest.constants.newLine);\r\n            builder.append(\"--\" + this.boundary);\r\n            if (request instanceof Transaction) {\r\n                builder.append(this._buildTransaction(request));\r\n            }\r\n            else {\r\n                builder.append(this._buildRequest(request));\r\n            }\r\n        }\r\n        builder.append(this._createDelimeter(this.boundary, true));\r\n        return builder.build();\r\n    };\r\n    BatchRequest.prototype._buildRequest = function (request) {\r\n        var builder = new BlobBuilder_1.BlobBuilder();\r\n        builder.append(BatchRequest.constants.newLine + 'Content-Type: application/http' +\r\n            BatchRequest.constants.newLine + 'Content-Transfer-Encoding: binary' +\r\n            BatchRequest.constants.newLine +\r\n            BatchRequest.constants.newLine +\r\n            request._getMethod() +\r\n            ' ' + request._buildUrl() + ' HTTP/1.1');\r\n        return builder.build();\r\n    };\r\n    BatchRequest.prototype._buildTransaction = function (transaction) {\r\n        if (transaction._requests.length == 0)\r\n            return;\r\n        var builder = new BlobBuilder_1.BlobBuilder();\r\n        builder.append(BatchRequest.constants.newLine);\r\n        var changeset = this._createBoundary(\"sf_changeset_\");\r\n        builder.append('Content-Type: multipart/mixed; boundary=' + changeset);\r\n        var changesetRequests = transaction._requests;\r\n        for (var index = 0; index < changesetRequests.length; index += 1) {\r\n            var currentRequest = changesetRequests[index].request;\r\n            builder.append(this._createDelimeter(changeset, false) +\r\n                BatchRequest.constants.newLine + 'Content-Type: application/http' +\r\n                BatchRequest.constants.newLine + 'Content-Transfer-Encoding: binary' +\r\n                BatchRequest.constants.newLine + 'Content-ID: ' + changesetRequests[index].id);\r\n            var requestUrl = currentRequest._buildUrl();\r\n            builder.append('\\r\\n\\r\\n' + currentRequest._getMethod() + ' ' + requestUrl + ' HTTP/1.1');\r\n            var headers = currentRequest._getHeaders();\r\n            var headerNames = Object.keys(headers);\r\n            for (var i = 0; i < headerNames.length; i++) {\r\n                var headerName = headerNames[i];\r\n                builder.append(BatchRequest.constants.newLine + headerName + \": \" + headers[headerName]);\r\n            }\r\n            var body = currentRequest._getBody();\r\n            if (body) {\r\n                builder.append('\\r\\n\\r\\n');\r\n                builder.append(body);\r\n            }\r\n        }\r\n        builder.append(this._createDelimeter(changeset, true));\r\n        return builder.build();\r\n    };\r\n    BatchRequest.prototype._createDelimeter = function (boundary, close) {\r\n        var result = BatchRequest.constants.newLine +\r\n            BatchRequest.constants.newLine\r\n            + \"--\" + boundary;\r\n        if (close)\r\n            result += \"--\";\r\n        return result;\r\n    };\r\n    BatchRequest.prototype._createBoundary = function (prefix) {\r\n        return prefix + utils_1.utils.hex16() + '-' + utils_1.utils.hex16() + '-' + utils_1.utils.hex16();\r\n    };\r\n    BatchRequest.prototype.addRequest = function (request) {\r\n        return Transaction.prototype.addRequest(this, request);\r\n    };\r\n    BatchRequest.prototype.urlParametersClone = function (entitySet) {\r\n        return Transaction.prototype.urlParametersClone.call(this, entitySet);\r\n    };\r\n    BatchRequest.constants = {\r\n        newLine: '\\r\\n'\r\n    };\r\n    return BatchRequest;\r\n}(Request_1.RequestBase));\r\nmodule.exports = BatchRequest;\r\n\n\n/***/ }),\n\n/***/ \"./src/Requests/ExecutableRequest.ts\":\n/*!*******************************************!*\\\n  !*** ./src/Requests/ExecutableRequest.ts ***!\n  \\*******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./src/utils.ts\");\r\nvar headerNames = __webpack_require__(/*! ../Headers */ \"./src/Headers.ts\").headerNames;\r\nvar XMLHttpRequestDone = 4;\r\nfunction isFunction(func) {\r\n    return typeof func === 'function';\r\n}\r\nvar ExecutableRequest = /** @class */ (function () {\r\n    function ExecutableRequest(options) {\r\n        this._getMethod = function () {\r\n            return this.request._getMethod();\r\n        };\r\n        this._getHeaders = function () {\r\n            return this.request._getHeaders();\r\n        };\r\n        this._getQueryString = function (urlOptions) {\r\n            return this.request._getQueryString(urlOptions);\r\n        };\r\n        this._buildUrl = function () {\r\n            return this.request._buildUrl();\r\n        };\r\n        this.request = options.request;\r\n        this.handlers = options.handlers;\r\n        this.token = options.token;\r\n        this.enableUnlimitedChoices = options.enableUnlimitedChoices;\r\n    }\r\n    ExecutableRequest.prototype.execute = function () {\r\n        this._execute();\r\n    };\r\n    ExecutableRequest.prototype._execute = function () {\r\n        var _this = this;\r\n        var http = new XMLHttpRequest();\r\n        http.onreadystatechange = function () {\r\n            if (http.readyState === XMLHttpRequestDone) {\r\n                if (http.status > 0) {\r\n                    var data = _this.request._parseResponse(http);\r\n                    if (http.status >= 200 && http.status <= 206) {\r\n                        if (isFunction(_this.request.successCb)) {\r\n                            _this.request.successCb(data);\r\n                        }\r\n                        if (_this.handlers && isFunction(_this.handlers.successCb)) {\r\n                            _this.handlers.successCb(data);\r\n                        }\r\n                    }\r\n                    else if (http.status >= 400) {\r\n                        // When the data is string, we save the string as message\r\n                        // and convert the data to normal object with message property\r\n                        if (utils_1.utils.isString(data)) {\r\n                            var message = data;\r\n                            data = {\r\n                                message: message\r\n                            };\r\n                        }\r\n                        data.status = http.status;\r\n                        // in case of errors we would like there to be one handler for all of the errors\r\n                        if (isFunction(_this.request.failureCb)) {\r\n                            _this.request.failureCb(data);\r\n                        }\r\n                        if (_this.handlers && isFunction(_this.handlers.failureCb)) {\r\n                            _this.handlers.failureCb(data);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        if (isFunction(this.request.progressCb)) {\r\n            if (http.upload) {\r\n                var that = this;\r\n                http.upload.onprogress = function (event) {\r\n                    that.request.progressCb(event);\r\n                };\r\n            }\r\n        }\r\n        var method = this._getMethod();\r\n        var url = this._buildUrl();\r\n        http.open(method, url, true);\r\n        this.setHeaders(http, this._getHeaders());\r\n        http.send(this._getBody());\r\n    };\r\n    ExecutableRequest.prototype.setHeaders = function (http, headers) {\r\n        var headerKeys = Object.keys(headers);\r\n        for (var i = 0; i < headerKeys.length; i++) {\r\n            var currentHeaderName = headerKeys[i];\r\n            http.setRequestHeader(currentHeaderName, headers[currentHeaderName]);\r\n        }\r\n        if (this.token) {\r\n            if (typeof this.token === 'string') {\r\n                // for backward compatibility\r\n                http.setRequestHeader(headerNames.authorization, this.token);\r\n            }\r\n            else {\r\n                http.setRequestHeader(headerNames.authorization, this.token.type + \" \" + this.token.value);\r\n            }\r\n        }\r\n        if (this.enableUnlimitedChoices) {\r\n            http.setRequestHeader(headerNames.choicesBinaryRepresentation, true);\r\n        }\r\n        // for backward compatibility\r\n        http.setRequestHeader(headerNames.serviceRequest, \"true\");\r\n    };\r\n    ExecutableRequest.prototype._getBody = function () {\r\n        var body = utils_1.utils.serializeToJSON(this.request._getBody());\r\n        return body;\r\n    };\r\n    return ExecutableRequest;\r\n}());\r\nexports.ExecutableRequest = ExecutableRequest;\r\n\n\n/***/ }),\n\n/***/ \"./src/Requests/Request.ts\":\n/*!*********************************!*\\\n  !*** ./src/Requests/Request.ts ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\r\nvar utils_1 = __webpack_require__(/*! ../utils */ \"./src/utils.ts\");\r\nvar constants = __webpack_require__(/*! ../constants */ \"./src/constants.ts\").default;\r\nvar headerNames = __webpack_require__(/*! ../Headers */ \"./src/Headers.ts\").headerNames;\r\nvar contentTypes = __webpack_require__(/*! ../ContentTypes */ \"./src/ContentTypes.ts\").default;\r\nvar httpMethods = __webpack_require__(/*! ../HttpMethods */ \"./src/HttpMethods.ts\").default;\r\nvar RequestBase = /** @class */ (function () {\r\n    function RequestBase(options) {\r\n        this.successCb = options.successCb;\r\n        this.failureCb = options.failureCb;\r\n        this.urlOptions = options.urlOptions;\r\n        this.progressCb = options.progressCb;\r\n        this.key = options.key;\r\n        this.action = options.action;\r\n        this._fallbackProperties = options.fallbackProperties;\r\n    }\r\n    RequestBase.prototype._getBody = function () {\r\n        return undefined;\r\n    };\r\n    RequestBase.prototype._getMethod = function () {\r\n        return null;\r\n    };\r\n    RequestBase.prototype._getHeaders = function () {\r\n        var headers = {};\r\n        headers[headerNames.contentType] = contentTypes.json;\r\n        return headers;\r\n    };\r\n    RequestBase.prototype._getQueryParameters = function (paramDictionary, urlOptions) {\r\n        var clause = constants.SfParams;\r\n        if (urlOptions.SFParams) {\r\n            var sfParams = urlOptions.SFParams;\r\n            if (sfParams.provider) {\r\n                paramDictionary[clause.provider] = sfParams.provider;\r\n            }\r\n            if (sfParams.culture) {\r\n                paramDictionary[clause.culture] = sfParams.culture;\r\n            }\r\n            if (sfParams.siteId) {\r\n                paramDictionary[clause.siteId] = sfParams.siteId;\r\n            }\r\n        }\r\n        if (this._fallbackProperties) {\r\n            paramDictionary[\"sf_fallback_prop_names\"] = this._fallbackProperties.join();\r\n        }\r\n    };\r\n    RequestBase.prototype._getQueryString = function (urlOptions) {\r\n        var paramDictionary = {};\r\n        this._getQueryParameters(paramDictionary, urlOptions);\r\n        var keys = Object.keys(paramDictionary);\r\n        if (keys.length == 0)\r\n            return null;\r\n        var queryString = \"?\";\r\n        for (var prop in paramDictionary) {\r\n            queryString += prop + \"=\" + paramDictionary[prop] + \"&\";\r\n        }\r\n        queryString = queryString.substring(0, queryString.length - 1);\r\n        return queryString;\r\n    };\r\n    RequestBase.prototype._buildUrl = function () {\r\n        var url = this.urlOptions.baseUrl + (this.urlOptions.entitySet || \"\");\r\n        url += this.key ? (\"(\" + this.key + \")\") : \"\";\r\n        url += this.action ? (\"/\" + this.action) : \"\";\r\n        // including count here\r\n        // not the best solution as build() is called once more in getQueryString\r\n        // but not that big of an issue right now\r\n        if (this.urlOptions.ODataParams) {\r\n            var getCount = this.urlOptions.ODataParams.build().$count;\r\n            if (utils_1.utils.isBoolean(getCount) && !getCount) {\r\n                url += \"/$count\";\r\n            }\r\n        }\r\n        return this._addQueryParameters(url);\r\n    };\r\n    RequestBase.prototype._parseResponse = function (http) {\r\n        var data = utils_1.utils.parseStringToJson(http.responseText);\r\n        if (data) {\r\n            if (http.status >= 400 && data.error) {\r\n                return data.error;\r\n            }\r\n            return data;\r\n        }\r\n        return http.responseText;\r\n    };\r\n    RequestBase.prototype._addQueryParameters = function (url) {\r\n        var queryString = this._getQueryString(this.urlOptions);\r\n        if (queryString) {\r\n            if (url.indexOf(\"?\") > -1 && queryString[0] == \"?\") {\r\n                queryString = \"&\" + queryString.substring(1);\r\n            }\r\n            url += queryString;\r\n        }\r\n        return url;\r\n    };\r\n    return RequestBase;\r\n}());\r\nexports.RequestBase = RequestBase;\r\nvar GetRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GetRequest, _super);\r\n    function GetRequest(options) {\r\n        return _super.call(this, options) || this;\r\n    }\r\n    GetRequest.prototype._getMethod = function () {\r\n        return httpMethods.Get;\r\n    };\r\n    GetRequest.prototype._getQueryParameters = function (paramDictionary, urlOptions) {\r\n        var clause = constants.ODataParams;\r\n        if (urlOptions.ODataParams) {\r\n            var query = urlOptions.ODataParams.build();\r\n            if (utils_1.utils.isString(query.$filter))\r\n                paramDictionary[clause.$filter] = query.$filter;\r\n            if (utils_1.utils.isString(query.$select))\r\n                paramDictionary[clause.$select] = query.$select;\r\n            if (utils_1.utils.isString(query.$expand))\r\n                paramDictionary[clause.$expand] = query.$expand;\r\n            if (utils_1.utils.isString(query.$orderby))\r\n                paramDictionary[clause.$orderby] = query.$orderby;\r\n            if (utils_1.utils.isNumber(query.$skip))\r\n                paramDictionary[clause.$skip] = query.$skip;\r\n            if (utils_1.utils.isNumber(query.$top))\r\n                paramDictionary[clause.$top] = query.$top;\r\n            if (utils_1.utils.isString(query.$search))\r\n                paramDictionary[clause.$search] = query.$search;\r\n            // inline count\r\n            if (utils_1.utils.isBoolean(query.$count) && query.$count)\r\n                paramDictionary[clause.$count] = query.$count;\r\n        }\r\n        _super.prototype._getQueryParameters.call(this, paramDictionary, urlOptions);\r\n    };\r\n    return GetRequest;\r\n}(RequestBase));\r\nexports.GetRequest = GetRequest;\r\nvar GetByIdRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GetByIdRequest, _super);\r\n    function GetByIdRequest(options) {\r\n        return _super.call(this, options) || this;\r\n    }\r\n    GetByIdRequest.prototype._getMethod = function () {\r\n        return httpMethods.Get;\r\n    };\r\n    GetByIdRequest.prototype._getQueryParameters = function (paramDictionary, urlOptions) {\r\n        var clause = constants.ODataParams;\r\n        if (urlOptions.ODataParams) {\r\n            var query = urlOptions.ODataParams.build();\r\n            if (utils_1.utils.isString(query.$select))\r\n                paramDictionary[clause.$select] = query.$select;\r\n            if (utils_1.utils.isString(query.$expand))\r\n                paramDictionary[clause.$expand] = query.$expand;\r\n        }\r\n        _super.prototype._getQueryParameters.call(this, paramDictionary, urlOptions);\r\n    };\r\n    return GetByIdRequest;\r\n}(RequestBase));\r\nexports.GetByIdRequest = GetByIdRequest;\r\nvar DeleteRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DeleteRequest, _super);\r\n    function DeleteRequest(options) {\r\n        return _super.call(this, options) || this;\r\n    }\r\n    DeleteRequest.prototype._getMethod = function () {\r\n        return httpMethods.Delete;\r\n    };\r\n    return DeleteRequest;\r\n}(RequestBase));\r\nexports.DeleteRequest = DeleteRequest;\r\nvar UpdateRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UpdateRequest, _super);\r\n    function UpdateRequest(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this._data = options.data;\r\n        _this._saveTemp = options.saveTemp;\r\n        return _this;\r\n    }\r\n    UpdateRequest.prototype._getMethod = function () {\r\n        return httpMethods.Patch;\r\n    };\r\n    UpdateRequest.prototype._getBody = function () {\r\n        var body = utils_1.utils.convertDateFieldToISOString(this._data);\r\n        return body;\r\n    };\r\n    UpdateRequest.prototype._getHeaders = function () {\r\n        var headers = RequestBase.prototype._getHeaders.call(this);\r\n        if (this._saveTemp) {\r\n            headers[headerNames.operation] = \"SaveTemp\";\r\n        }\r\n        return headers;\r\n    };\r\n    return UpdateRequest;\r\n}(RequestBase));\r\nexports.UpdateRequest = UpdateRequest;\r\nvar CreateRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CreateRequest, _super);\r\n    function CreateRequest(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this._data = options.data;\r\n        return _this;\r\n    }\r\n    CreateRequest.prototype._getMethod = function () {\r\n        return httpMethods.Post;\r\n    };\r\n    CreateRequest.prototype._getBody = function () {\r\n        var body = utils_1.utils.convertDateFieldToISOString(this._data);\r\n        return body;\r\n    };\r\n    return CreateRequest;\r\n}(RequestBase));\r\nexports.CreateRequest = CreateRequest;\r\nvar GetRelatedRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GetRelatedRequest, _super);\r\n    function GetRelatedRequest(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this.navigationProperty = options.navigationProperty;\r\n        return _this;\r\n    }\r\n    GetRelatedRequest.prototype._buildUrl = function () {\r\n        var url = this.urlOptions.baseUrl + this.urlOptions.entitySet + \"(\" + this.key + \")/\" + this.navigationProperty;\r\n        return this._addQueryParameters(url);\r\n    };\r\n    return GetRelatedRequest;\r\n}(GetByIdRequest));\r\nexports.GetRelatedRequest = GetRelatedRequest;\r\nvar GetRelatedByIdRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GetRelatedByIdRequest, _super);\r\n    function GetRelatedByIdRequest(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this.navigationProperty = options.navigationProperty;\r\n        _this.relatedKey = options.relatedKey;\r\n        return _this;\r\n    }\r\n    GetRelatedByIdRequest.prototype._buildUrl = function () {\r\n        var url = this.urlOptions.baseUrl + this.urlOptions.entitySet + \"(\" + this.key + \")/\" + this.navigationProperty + \"(\" + this.relatedKey + \")\";\r\n        return this._addQueryParameters(url);\r\n    };\r\n    return GetRelatedByIdRequest;\r\n}(GetByIdRequest));\r\nexports.GetRelatedByIdRequest = GetRelatedByIdRequest;\r\nvar DeleteRelatedRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DeleteRelatedRequest, _super);\r\n    function DeleteRelatedRequest(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this.navigationProperty = options.navigationProperty;\r\n        return _this;\r\n    }\r\n    DeleteRelatedRequest.prototype._buildUrl = function () {\r\n        var url = this.urlOptions.baseUrl + this.urlOptions.entitySet + \"(\" + this.key + \")/\" + this.navigationProperty + \"/$ref\";\r\n        return this._addQueryParameters(url);\r\n    };\r\n    return DeleteRelatedRequest;\r\n}(DeleteRequest));\r\nexports.DeleteRelatedRequest = DeleteRelatedRequest;\r\nvar DeleteRelatedByIdRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DeleteRelatedByIdRequest, _super);\r\n    function DeleteRelatedByIdRequest(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this.navigationProperty = options.navigationProperty;\r\n        _this.relatedKey = options.relatedKey;\r\n        return _this;\r\n    }\r\n    DeleteRelatedByIdRequest.prototype._buildUrl = function () {\r\n        var url = this.urlOptions.baseUrl + this.urlOptions.entitySet + \"(\" + this.key + \")/\" + this.navigationProperty + \"(\" + this.relatedKey + \")/$ref\";\r\n        return this._addQueryParameters(url);\r\n    };\r\n    return DeleteRelatedByIdRequest;\r\n}(DeleteRequest));\r\nexports.DeleteRelatedByIdRequest = DeleteRelatedByIdRequest;\r\nvar CreateRelatedRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CreateRelatedRequest, _super);\r\n    function CreateRelatedRequest(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this.navigationProperty = options.navigationProperty;\r\n        _this.key = options.key;\r\n        return _this;\r\n    }\r\n    CreateRelatedRequest.prototype._buildUrl = function () {\r\n        var url = this.urlOptions.baseUrl + this.urlOptions.entitySet + \"(\" + this.key + \")/\" + this.navigationProperty + \"/$ref\";\r\n        return this._addQueryParameters(url);\r\n    };\r\n    return CreateRelatedRequest;\r\n}(CreateRequest));\r\nexports.CreateRelatedRequest = CreateRelatedRequest;\r\nvar UploadRequest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UploadRequest, _super);\r\n    function UploadRequest(options) {\r\n        var _this = _super.call(this, options) || this;\r\n        _this.fileName = options.fileName;\r\n        _this.uploadProperties = options.uploadProperties;\r\n        _this.contentType = options.contentType;\r\n        return _this;\r\n    }\r\n    UploadRequest.prototype._getHeaders = function () {\r\n        var headers = _super.prototype._getHeaders.call(this);\r\n        headers[headerNames.contentType] = this.contentType || \"application/octet-stream\";\r\n        headers[headerNames.fileName] = this.fileName;\r\n        headers[headerNames.properties] = this.uploadProperties;\r\n        headers[headerNames.contentEncoding] = \"identity\";\r\n        return headers;\r\n    };\r\n    UploadRequest.prototype._getBody = function () {\r\n        return this._data;\r\n    };\r\n    UploadRequest.prototype._getMethod = function () {\r\n        if (this.key) {\r\n            return httpMethods.Patch;\r\n        }\r\n        return httpMethods.Post;\r\n    };\r\n    return UploadRequest;\r\n}(CreateRequest));\r\nexports.UploadRequest = UploadRequest;\r\n\n\n/***/ }),\n\n/***/ \"./src/Requests/RequestFactory.ts\":\n/*!****************************************!*\\\n  !*** ./src/Requests/RequestFactory.ts ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Request_1 = __webpack_require__(/*! ./Request */ \"./src/Requests/Request.ts\");\r\nvar ExecutableRequest_1 = __webpack_require__(/*! ./ExecutableRequest */ \"./src/Requests/ExecutableRequest.ts\");\r\nvar BatchRequest = __webpack_require__(/*! ./BatchRequest */ \"./src/Requests/BatchRequest.ts\");\r\nvar RequestFactory = /** @class */ (function () {\r\n    function RequestFactory(options) {\r\n        this.token = null;\r\n        this.handlers = options.handlers;\r\n        this.enableUnlimitedChoices = options.enableUnlimitedChoices;\r\n    }\r\n    RequestFactory.prototype.get = function (parameters) {\r\n        return this.createExecutor(new Request_1.GetRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.getSingle = function (parameters) {\r\n        return this.createExecutor(new Request_1.GetByIdRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.create = function (parameters) {\r\n        return this.createExecutor(new Request_1.CreateRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.update = function (parameters) {\r\n        return this.createExecutor(new Request_1.UpdateRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.destroy = function (parameters) {\r\n        return this.createExecutor(new Request_1.DeleteRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.getProperty = function (parameters) {\r\n        return this.createExecutor(new Request_1.GetRelatedRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.getRelated = function (parameters) {\r\n        return this.createExecutor(new Request_1.GetRelatedRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.getRelatedById = function (parameters) {\r\n        return this.createExecutor(new Request_1.GetRelatedByIdRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.destroyRelated = function (parameters) {\r\n        return this.createExecutor(new Request_1.DeleteRelatedRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.destroyRelatedById = function (parameters) {\r\n        return this.createExecutor(new Request_1.DeleteRelatedByIdRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.createRelated = function (parameters) {\r\n        return this.createExecutor(new Request_1.CreateRelatedRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.batch = function (parameters) {\r\n        parameters._factory = this;\r\n        return new BatchRequest(parameters);\r\n    };\r\n    RequestFactory.prototype.upload = function (parameters) {\r\n        return this.createExecutor(new Request_1.UploadRequest(parameters));\r\n    };\r\n    RequestFactory.prototype.createExecutor = function (request) {\r\n        var executor = new ExecutableRequest_1.ExecutableRequest({\r\n            request: request,\r\n            handlers: this.handlers || {},\r\n            token: this.token,\r\n            enableUnlimitedChoices: this.enableUnlimitedChoices\r\n        });\r\n        // TODO\r\n        executor.navigationProperty = request.navigationProperty;\r\n        return executor;\r\n    };\r\n    return RequestFactory;\r\n}());\r\nexports.RequestFactory = RequestFactory;\r\n\n\n/***/ }),\n\n/***/ \"./src/Sitefinity.ts\":\n/*!***************************!*\\\n  !*** ./src/Sitefinity.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar RequestFactory_1 = __webpack_require__(/*! ./Requests/RequestFactory */ \"./src/Requests/RequestFactory.ts\");\r\nvar Authentication_1 = __webpack_require__(/*! ./Authentication */ \"./src/Authentication.ts\");\r\nvar Data_1 = __webpack_require__(/*! ./Data */ \"./src/Data.ts\");\r\nvar Query_1 = __webpack_require__(/*! ./Query */ \"./src/Query.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\n/**\r\n* @class Sitefinity\r\n* @classdesc The constructor of the Sitefinity JavaScript SDK. This is the entry point for the SDK.\r\n* @property {Object} authentication - The authentication object used for authenticating to Sitefinity. See {@link Authentication}\r\n* @param {object} options - An object containing configuration options for the Setup object.\r\n* @param {string} options.serviceUrl - Your service url that points to the configured instance of Sitefinity service.\r\n* @param {string} options.siteId - The ID of the site, for which the query will be executed.\r\n* @param {string} options.handlers - The global handlers for request execution\r\n* @param {string} options.handlers.successCb - The success handler.\r\n* @param {string} options.handlers.failureCb - The failure handler.\r\n*/\r\nvar Sitefinity = /** @class */ (function () {\r\n    function Sitefinity(options) {\r\n        this.profileUrl = utils_1.utils.addTrailingSlash(options.serviceUrl);\r\n        this.siteId = options.siteId;\r\n        this.factory = new RequestFactory_1.RequestFactory({\r\n            handlers: options.handlers,\r\n            enableUnlimitedChoices: options.enableUnlimitedChoices\r\n        });\r\n        this.authentication = new Authentication_1.Authentication({\r\n            serviceUrl: this.profileUrl,\r\n            factory: this.factory\r\n        });\r\n    }\r\n    /**\r\n* Creates a new {@link Data} class.\r\n* @memberOf Sitefinity\r\n* @instance\r\n* @param {object} options - An object containing configuration options for the Setup object.\r\n* @param {string} options.urlName - The URL name of the type..\r\n* @param {string} [options.providerName] - The name of the provider. If empty the default provider for the site will be used.\r\n* @param {string} [options.cultureName] - The name of the culture. If empty the default culture for the site will be used.\r\n* @example\r\n* var data = sf.data({\r\n*     urlName: \"newsitems\",\r\n*     providerName: \"OpenAccessDataProvider\",\r\n*     cultureName: \"en\"\r\n* });\r\n* @returns {Data}\r\n*/\r\n    Sitefinity.prototype.data = function (options) {\r\n        var dataOptions = {\r\n            baseUrl: this.profileUrl,\r\n            SFParams: {\r\n                provider: options.providerName,\r\n                culture: options.cultureName,\r\n                siteId: options.siteId || this.siteId\r\n            },\r\n            entitySet: options.urlName\r\n        };\r\n        this.factory.token = this.authentication.getToken();\r\n        return new Data_1.Data(dataOptions, this.factory);\r\n    };\r\n    /**\r\n    * Creates a new {@link BatchRequest} class. OData batch requests -> {@link http://docs.oasis-open.org/odata/odata/v4.0/os/part1-protocol/odata-v4.0-os-part1-protocol.html#_Toc372793748}\r\n    * @memberOf Sitefinity\r\n    * @instance\r\n    * @param {Function} success - The success callback of the batch execution.\r\n    * @param {string} options.urlName - The URL name of the type..\r\n    * @param {string} [options.providerName] - The name of the provider. If empty the default provider for the site will be used.\r\n    * @param {string} [options.cultureName] - The name of the culture. If empty the default culture for the site will be used.\r\n    * @example\r\n    * var sf = new Sitefinity({\r\n    *   serviceUrl: 'http://mydomain/route/service/'\r\n    * });\r\n    *\r\n    * var batch = sf.batch(successCbBatch, failureCb);\r\n    * batch.get({\r\n    *     entitySet: entitySet,\r\n    *     query: query8\r\n    * });\r\n    *\r\n    * var transaction = batch.beginTransaction();\r\n    * var createId = transaction.create({\r\n    *     entitySet: entitySet,\r\n    *     data: newsItem\r\n    * });\r\n    *\r\n    * batch.endTransaction(transaction);\r\n    *\r\n    * var transaction2 = batch.beginTransaction();\r\n    * var createId2 = transaction2.create({\r\n    *     entitySet: entitySet,\r\n    *     data: newsItem\r\n    * });\r\n    *\r\n    * var updateId2 = transaction2.update({\r\n    *     entitySet: entitySet,\r\n    *     key: createId2,\r\n    *     data: newsItemUpdate\r\n    * });\r\n    *\r\n    * batch.endTransaction(transaction2);\r\n    *\r\n    * batch.get({\r\n    *     entitySet: entitySet\r\n    * });\r\n    *\r\n    * batch.execute();\r\n    * @returns {BatchRequest}\r\n    */\r\n    Sitefinity.prototype.batch = function (success, failure, progress, options) {\r\n        if (typeof progress !== 'function') {\r\n            options = progress;\r\n            progress = null;\r\n        }\r\n        if (!options)\r\n            options = {};\r\n        this.factory.token = this.authentication.getToken();\r\n        var batch = this.factory.batch({\r\n            successCb: success,\r\n            failureCb: failure,\r\n            progressCb: progress,\r\n            urlOptions: {\r\n                baseUrl: this.profileUrl,\r\n                SFParams: {\r\n                    provider: options.providerName,\r\n                    culture: options.cultureName,\r\n                    siteId: this.siteId\r\n                }\r\n            }\r\n        });\r\n        var executor = this.factory.createExecutor(batch);\r\n        executor.beginTransaction = function () {\r\n            return batch.beginTransaction();\r\n        };\r\n        executor.endTransaction = function (transaction) {\r\n            batch.endTransaction(transaction);\r\n        };\r\n        executor.get = function (options) {\r\n            batch.constructor.prototype.get.call(batch, options);\r\n        };\r\n        executor.getOperations = function (options) {\r\n            batch.constructor.prototype.getOperations.call(batch, options);\r\n        };\r\n        executor.getSingle = function (options) {\r\n            batch.constructor.prototype.getSingle.call(batch, options);\r\n        };\r\n        executor.getProperty = function (options) {\r\n            batch.constructor.prototype.getProperty.call(batch, options);\r\n        };\r\n        executor.getRelated = function (options) {\r\n            batch.constructor.prototype.getRelated.call(batch, options);\r\n        };\r\n        executor.getRelatedById = function (options) {\r\n            batch.constructor.prototype.getRelatedById.call(batch, options);\r\n        };\r\n        return executor;\r\n    };\r\n    Sitefinity.Query = Query_1.Query;\r\n    return Sitefinity;\r\n}());\r\nexports.Sitefinity = Sitefinity;\r\n\n\n/***/ }),\n\n/***/ \"./src/WhereQuery.ts\":\n/*!***************************!*\\\n  !*** ./src/WhereQuery.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Expression_1 = __webpack_require__(/*! ./Expression */ \"./src/Expression.ts\");\r\nvar OperatorType = __webpack_require__(/*! ./constants */ \"./src/constants.ts\").default.ExpressionType;\r\n/**\r\n * @classdesc A fluent API operation for creating a filter for a query by chaining different rules.\r\n * @class WhereQuery\r\n * @protected\r\n */\r\nvar WhereQuery = /** @class */ (function () {\r\n    function WhereQuery(parent, type) {\r\n        if (type === void 0) { type = OperatorType.and; }\r\n        this.parent = parent;\r\n        this.expression = new Expression_1.ComplexExpression(type, []);\r\n    }\r\n    /**\r\n    * Adds an `and` clause to the current condition and returns it for further chaining.\r\n    * @method and\r\n    * @memberOf WhereQuery.prototype\r\n    * @returns {WhereQuery}\r\n    */\r\n    WhereQuery.prototype.and = function () {\r\n        return new WhereQuery(this, OperatorType.and);\r\n    };\r\n    /**\r\n     * Adds an `or` clause to the current condition and returns it for further chaining.\r\n     * @method or\r\n     * @memberOf WhereQuery.prototype\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.or = function () {\r\n        return new WhereQuery(this, OperatorType.or);\r\n    };\r\n    /**\r\n     * Adds an `any` clause to the current condition and returns it for further chaining.\r\n     * @method any\r\n     * @memberOf WhereQuery.prototype\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.any = function () {\r\n        return new WhereQuery(this, OperatorType.any);\r\n    };\r\n    /**\r\n     * Adds a `not` clause to the current condition and returns it for further chaining.\r\n     * @method not\r\n     * @memberOf WhereQuery.prototype\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.not = function () {\r\n        return new WhereQuery(this, OperatorType.not);\r\n    };\r\n    WhereQuery.prototype._simple = function (type, parameter, constant) {\r\n        var currentExpr = new Expression_1.BinaryExpression(type, parameter, constant);\r\n        var subExpressions = this.expression.getExpressions();\r\n        subExpressions.push(currentExpr);\r\n        if (this.expression.getType() === OperatorType.not && subExpressions.length > 1)\r\n            throw new Error(\"Invalid operators count!\");\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a condition that a field must be equal to a specific value.\r\n     * @method eq\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (to which the fields must be equal).\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.eq = function (parameter, constant) {\r\n        return this._simple(OperatorType.eq, parameter, constant);\r\n    };\r\n    /**\r\n     * Adds a condition that a field must *not* be equal to a specific value.\r\n     * @method ne\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (to which the field must not be equal).\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.ne = function (parameter, constant) {\r\n        return this._simple(OperatorType.ne, parameter, constant);\r\n    };\r\n    /**\r\n     * Adds a condition that a field must be `greater than` a certain value. Applicable to Number, String, and Date fields.\r\n     * @method gt\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (that the field should be greater than).\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.gt = function (parameter, constant) {\r\n        return this._simple(OperatorType.gt, parameter, constant);\r\n    };\r\n    /**\r\n     * Adds a condition that a field must be `greater than or equal` to a certain value. Applicable to Number, String, and Date fields.\r\n     * @method gte\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (that the field should be greater than or equal to).\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.gte = function (parameter, constant) {\r\n        return this._simple(OperatorType.ge, parameter, constant);\r\n    };\r\n    /**\r\n     * Adds a condition that a field must be `less than` a certain value. Applicable to Number, String, and Date fields.\r\n     * @method lt\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (that the field should be less than).\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.lt = function (parameter, constant) {\r\n        return this._simple(OperatorType.lt, parameter, constant);\r\n    };\r\n    /**\r\n     * Adds a condition that a field must be `less than or equal` to a certain value. Applicable to Number, String, and Date fields.\r\n     * @method lte\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {*} value Comparison value (that the field should be less than or equal to).\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.lte = function (parameter, constant) {\r\n        return this._simple(OperatorType.le, parameter, constant);\r\n    };\r\n    /**\r\n     * Adds a condition that a field value must *start* with a specified string.\r\n     * @method startsWith\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {string} value The string that the field should start with.\r\n     * @param {string} [options] A string of regex options to use. See [specs](http://docs.mongodb.org/manual/reference/operator/query/regex/#op._S_options) for a description of available options.\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.startsWith = function (parameter, constant) {\r\n        return this._simple(OperatorType.startsWith, parameter, constant);\r\n    };\r\n    /**\r\n     * Adds a condition that a field value must *contain* a specified string.\r\n     * @method startsWith\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {string} value The string that the field should start with.\r\n     * @param {string} [options] A string of regex options to use. See [specs](http://docs.mongodb.org/manual/reference/operator/query/regex/#op._S_options) for a description of available options.\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.contains = function (parameter, constant) {\r\n        return this._simple(OperatorType.contains, parameter, constant);\r\n    };\r\n    /**\r\n     * Adds a condition that a field value must *end* with a specified string.\r\n     * @method endsWith\r\n     * @memberOf WhereQuery.prototype\r\n     * @param {string} field Field name.\r\n     * @param {string} value The string that the field should end with.\r\n     * @param {string} [options] A string of  regex options to use. See [specs](http://docs.mongodb.org/manual/reference/operator/query/regex/#op._S_options) for a description of available options.\r\n     * @returns {WhereQuery}\r\n     */\r\n    WhereQuery.prototype.endsWith = function (parameter, constant) {\r\n        return this._simple(OperatorType.endsWith, parameter, constant);\r\n    };\r\n    /**\r\n     * Ends the definition of the current WhereQuery. You need to call this method in order to continue with the definition of the parent {@link QueryBase}. All other `WhereQuery` methods return the current instance of `WhereQuery` to allow chaining.\r\n     * @method done\r\n     * @memberOf WhereQuery.prototype\r\n     * @returns {Query}\r\n     */\r\n    WhereQuery.prototype.done = function () {\r\n        if (this.parent instanceof WhereQuery) {\r\n            this.parent._addComplexExpression(this);\r\n            // TODO: If has and() || or() must call done() twice\r\n            if (this.expression.getType() === OperatorType.not)\r\n                return this.parent;\r\n        }\r\n        return this.parent;\r\n    };\r\n    WhereQuery.prototype._getExpression = function () {\r\n        return this.expression;\r\n    };\r\n    WhereQuery.prototype._addComplexExpression = function (subQuery) {\r\n        var subExpression = subQuery._getExpression();\r\n        this.expression.getExpressions().push(subExpression);\r\n    };\r\n    return WhereQuery;\r\n}());\r\nexports.WhereQuery = WhereQuery;\r\n\n\n/***/ }),\n\n/***/ \"./src/constants.ts\":\n/*!**************************!*\\\n  !*** ./src/constants.ts ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar constants = {\r\n    ExpressionType: {\r\n        query: 1,\r\n        where: 100,\r\n        and: 'and',\r\n        or: 'or',\r\n        not: 'not',\r\n        eq: 'eq',\r\n        ne: 'ne',\r\n        lt: 'lt',\r\n        le: 'le',\r\n        gt: 'gt',\r\n        ge: 'ge',\r\n        any: 'any',\r\n        /*isin: 126,\r\n        notin: 127,\r\n        all: 128,\r\n        size: 129,\r\n        regex: 130,*/\r\n        contains: 'contains',\r\n        startsWith: 'startsWith',\r\n        endsWith: 'endsWith'\r\n    },\r\n    ODataParams: {\r\n        $filter: '$filter',\r\n        $select: '$select',\r\n        $expand: '$expand',\r\n        $orderby: '$orderby',\r\n        $skip: '$skip',\r\n        $top: '$top',\r\n        $count: '$count',\r\n        $search: '$search'\r\n    },\r\n    SfParams: {\r\n        provider: 'sf_provider',\r\n        culture: 'sf_culture',\r\n        siteId: 'sf_site'\r\n    }\r\n};\r\nexports.default = constants;\r\n\n\n/***/ }),\n\n/***/ \"./src/main.ts\":\n/*!*********************!*\\\n  !*** ./src/main.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Sitefinity_1 = __webpack_require__(/*! ./Sitefinity */ \"./src/Sitefinity.ts\");\r\nmodule.exports = Sitefinity_1.Sitefinity;\r\n\n\n/***/ }),\n\n/***/ \"./src/utils.ts\":\n/*!**********************!*\\\n  !*** ./src/utils.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils = /** @class */ (function () {\r\n    function utils() {\r\n    }\r\n    utils.isString = function (obj) {\r\n        return typeof (obj) === 'string' || obj instanceof String;\r\n    };\r\n    utils.isBoolean = function (obj) {\r\n        return typeof (obj) === 'boolean';\r\n    };\r\n    utils.isBlob = function (obj) {\r\n        return obj instanceof Blob;\r\n    };\r\n    ;\r\n    utils.isNumber = function (value) {\r\n        return typeof value === 'number' && isFinite(value);\r\n    };\r\n    ;\r\n    utils.serializeToJSON = function (data) {\r\n        if (!utils.isString(data) && !this.isBlob(data)) {\r\n            return JSON.stringify(data);\r\n        }\r\n        return data;\r\n    };\r\n    utils.parseStringToJson = function (data) {\r\n        if (!data) {\r\n            return null;\r\n        }\r\n        var number = Number(data);\r\n        if (!isNaN(number)) {\r\n            return number;\r\n        }\r\n        var result = null;\r\n        try {\r\n            result = JSON.parse(data);\r\n            result = utils._parseDateProperties(result);\r\n        }\r\n        catch (e) {\r\n            console.log(\"An unexpected error occurred while parsing the response from server: \" + e.message + \". Response body was: '\" + data + \"'\");\r\n        }\r\n        return result;\r\n    };\r\n    utils.hex16 = function () {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substr(1);\r\n    };\r\n    utils.addTrailingSlash = function (url) {\r\n        url = utils.removeSlashes(url);\r\n        url += '/';\r\n        return url;\r\n    };\r\n    utils.removeSlashes = function (url) {\r\n        var ret = url;\r\n        var fistChar = ret.substr(0, 1);\r\n        if (fistChar == '/')\r\n            ret = ret.substr(1);\r\n        var lastChar = ret.substr(-1);\r\n        if (lastChar == '/')\r\n            ret = ret.substr(0, ret.length - 1);\r\n        return ret;\r\n    };\r\n    utils.clone = function (from, to, action) {\r\n        if (to === void 0) { to = {}; }\r\n        if (action === void 0) { action = null; }\r\n        if (!to)\r\n            to = {};\r\n        for (var property in from) {\r\n            if (from[property] && from[property].constructor && from[property].constructor === Object && typeof from[property] == 'function') {\r\n                to[property] = to[property] || {};\r\n                arguments.callee(to[property], from[property]);\r\n            }\r\n            else {\r\n                to[property] = from[property];\r\n            }\r\n            if (typeof action === 'function')\r\n                action(to);\r\n        }\r\n        return to;\r\n    };\r\n    utils._parseDateProperties = function (data) {\r\n        for (var obj in data) {\r\n            // TODO\r\n            if (data[obj] instanceof Array || (data[obj] instanceof Object && !data[obj] instanceof Function))\r\n                this._parseDateProperties(data[obj]);\r\n            else\r\n                data[obj] = utils._tryFormatFieldToDate(data[obj]);\r\n        }\r\n        return data;\r\n    };\r\n    utils._tryFormatFieldToDate = function (date) {\r\n        if ((/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/).test(date)) {\r\n            date = new Date(date);\r\n        }\r\n        return date;\r\n    };\r\n    utils.convertDateFieldToISOString = function (data) {\r\n        /*\r\n        TODOSDK: when write tests for this try to use\r\n        \"Object.keys(obj).forEach(function(){})\",\r\n        Phantomjs does not recognize \"for..in\" operator.\r\n        */\r\n        for (var obj in data) {\r\n            if (data[obj] instanceof Date) {\r\n                data[obj] = data[obj].toISOString();\r\n            }\r\n        }\r\n        return data;\r\n    };\r\n    return utils;\r\n}());\r\nexports.utils = utils;\r\n\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=sitefinity-webservices-sdk.js.map"],"sourceRoot":""}